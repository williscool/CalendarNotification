export default [
  {
    "statements": [
      "CREATE TABLE \"items\" (\n  \"value\" TEXT NOT NULL,\n  CONSTRAINT \"items_pkey\" PRIMARY KEY (\"value\")\n) WITHOUT ROWID;\n",
      "\n    -- Toggles for turning the triggers on and off\n    INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.items', 1);\n    ",
      "\n    /* Triggers for table items */\n  \n    -- ensures primary key is immutable\n    DROP TRIGGER IF EXISTS update_ensure_main_items_primarykey;\n    ",
      "\n    CREATE TRIGGER update_ensure_main_items_primarykey\n      BEFORE UPDATE ON main.items\n    BEGIN\n      SELECT\n        CASE\n          WHEN old.value != new.value THEN\n\t\tRAISE (ABORT, 'cannot change the value of column value as it belongs to the primary key')\n        END;\n    END;\n    ",
      "\n    -- Triggers that add INSERT, UPDATE, DELETE operation to the _opslog table\n    DROP TRIGGER IF EXISTS insert_main_items_into_oplog;\n    ",
      "\n    CREATE TRIGGER insert_main_items_into_oplog\n       AFTER INSERT ON main.items\n       WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.items')\n    BEGIN\n      INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n      VALUES ('main', 'items', 'INSERT', json_object('value', new.value), json_object('value', new.value), NULL, NULL);\n    END;\n    ",
      "\n    DROP TRIGGER IF EXISTS update_main_items_into_oplog;\n    ",
      "\n    CREATE TRIGGER update_main_items_into_oplog\n       AFTER UPDATE ON main.items\n       WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.items')\n    BEGIN\n      INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n      VALUES ('main', 'items', 'UPDATE', json_object('value', new.value), json_object('value', new.value), json_object('value', old.value), NULL);\n    END;\n    ",
      "\n    DROP TRIGGER IF EXISTS delete_main_items_into_oplog;\n    ",
      "\n    CREATE TRIGGER delete_main_items_into_oplog\n       AFTER DELETE ON main.items\n       WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.items')\n    BEGIN\n      INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n      VALUES ('main', 'items', 'DELETE', json_object('value', old.value), NULL, json_object('value', old.value), NULL);\n    END;\n    "
    ],
    "version": "20231017020742_343"
  },
  {
    "statements": [
      "CREATE TABLE \"eventsV9\" (\n  \"cid\" INTEGER,\n  \"id\" INTEGER NOT NULL,\n  \"altm\" INTEGER,\n  \"nid\" INTEGER,\n  \"ttl\" TEXT,\n  \"s1\" TEXT,\n  \"estart\" INTEGER,\n  \"eend\" INTEGER,\n  \"istart\" INTEGER NOT NULL,\n  \"iend\" INTEGER,\n  \"loc\" TEXT,\n  \"snz\" INTEGER,\n  \"ls\" INTEGER,\n  \"dsts\" INTEGER,\n  \"clr\" INTEGER,\n  \"rep\" INTEGER,\n  \"alld\" INTEGER,\n  \"ogn\" INTEGER,\n  \"fsn\" INTEGER,\n  \"attsts\" INTEGER,\n  \"oattsts\" INTEGER,\n  \"i1\" INTEGER,\n  \"i2\" INTEGER,\n  \"i3\" INTEGER,\n  \"i4\" INTEGER,\n  \"i5\" INTEGER,\n  \"i6\" INTEGER,\n  \"i7\" INTEGER,\n  \"i8\" INTEGER,\n  \"s2\" TEXT,\n  CONSTRAINT \"eventsV9_pkey\" PRIMARY KEY (\"id\", \"istart\")\n) WITHOUT ROWID;\n",
      "CREATE UNIQUE INDEX \"eventsIdxV9\" ON \"eventsV9\" (\"id\" ASC, \"istart\" ASC);\n",
      "\n    -- Toggles for turning the triggers on and off\n    INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.eventsV9', 1);\n    ",
      "\n    /* Triggers for table eventsV9 */\n  \n    -- ensures primary key is immutable\n    DROP TRIGGER IF EXISTS update_ensure_main_eventsV9_primarykey;\n    ",
      "\n    CREATE TRIGGER update_ensure_main_eventsV9_primarykey\n      BEFORE UPDATE ON main.eventsV9\n    BEGIN\n      SELECT\n        CASE\n          WHEN old.id != new.id THEN\n\t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\nWHEN old.istart != new.istart THEN\n\t\tRAISE (ABORT, 'cannot change the value of column istart as it belongs to the primary key')\n        END;\n    END;\n    ",
      "\n    -- Triggers that add INSERT, UPDATE, DELETE operation to the _opslog table\n    DROP TRIGGER IF EXISTS insert_main_eventsV9_into_oplog;\n    ",
      "\n    CREATE TRIGGER insert_main_eventsV9_into_oplog\n       AFTER INSERT ON main.eventsV9\n       WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.eventsV9')\n    BEGIN\n      INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n      VALUES ('main', 'eventsV9', 'INSERT', json_object('id', new.id, 'istart', new.istart), json_object('alld', new.alld, 'altm', new.altm, 'attsts', new.attsts, 'cid', new.cid, 'clr', new.clr, 'dsts', new.dsts, 'eend', new.eend, 'estart', new.estart, 'fsn', new.fsn, 'i1', new.i1, 'i2', new.i2, 'i3', new.i3, 'i4', new.i4, 'i5', new.i5, 'i6', new.i6, 'i7', new.i7, 'i8', new.i8, 'id', new.id, 'iend', new.iend, 'istart', new.istart, 'loc', new.loc, 'ls', new.ls, 'nid', new.nid, 'oattsts', new.oattsts, 'ogn', new.ogn, 'rep', new.rep, 's1', new.s1, 's2', new.s2, 'snz', new.snz, 'ttl', new.ttl), NULL, NULL);\n    END;\n    ",
      "\n    DROP TRIGGER IF EXISTS update_main_eventsV9_into_oplog;\n    ",
      "\n    CREATE TRIGGER update_main_eventsV9_into_oplog\n       AFTER UPDATE ON main.eventsV9\n       WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.eventsV9')\n    BEGIN\n      INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n      VALUES ('main', 'eventsV9', 'UPDATE', json_object('id', new.id, 'istart', new.istart), json_object('alld', new.alld, 'altm', new.altm, 'attsts', new.attsts, 'cid', new.cid, 'clr', new.clr, 'dsts', new.dsts, 'eend', new.eend, 'estart', new.estart, 'fsn', new.fsn, 'i1', new.i1, 'i2', new.i2, 'i3', new.i3, 'i4', new.i4, 'i5', new.i5, 'i6', new.i6, 'i7', new.i7, 'i8', new.i8, 'id', new.id, 'iend', new.iend, 'istart', new.istart, 'loc', new.loc, 'ls', new.ls, 'nid', new.nid, 'oattsts', new.oattsts, 'ogn', new.ogn, 'rep', new.rep, 's1', new.s1, 's2', new.s2, 'snz', new.snz, 'ttl', new.ttl), json_object('alld', old.alld, 'altm', old.altm, 'attsts', old.attsts, 'cid', old.cid, 'clr', old.clr, 'dsts', old.dsts, 'eend', old.eend, 'estart', old.estart, 'fsn', old.fsn, 'i1', old.i1, 'i2', old.i2, 'i3', old.i3, 'i4', old.i4, 'i5', old.i5, 'i6', old.i6, 'i7', old.i7, 'i8', old.i8, 'id', old.id, 'iend', old.iend, 'istart', old.istart, 'loc', old.loc, 'ls', old.ls, 'nid', old.nid, 'oattsts', old.oattsts, 'ogn', old.ogn, 'rep', old.rep, 's1', old.s1, 's2', old.s2, 'snz', old.snz, 'ttl', old.ttl), NULL);\n    END;\n    ",
      "\n    DROP TRIGGER IF EXISTS delete_main_eventsV9_into_oplog;\n    ",
      "\n    CREATE TRIGGER delete_main_eventsV9_into_oplog\n       AFTER DELETE ON main.eventsV9\n       WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.eventsV9')\n    BEGIN\n      INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n      VALUES ('main', 'eventsV9', 'DELETE', json_object('id', old.id, 'istart', old.istart), NULL, json_object('alld', old.alld, 'altm', old.altm, 'attsts', old.attsts, 'cid', old.cid, 'clr', old.clr, 'dsts', old.dsts, 'eend', old.eend, 'estart', old.estart, 'fsn', old.fsn, 'i1', old.i1, 'i2', old.i2, 'i3', old.i3, 'i4', old.i4, 'i5', old.i5, 'i6', old.i6, 'i7', old.i7, 'i8', old.i8, 'id', old.id, 'iend', old.iend, 'istart', old.istart, 'loc', old.loc, 'ls', old.ls, 'nid', old.nid, 'oattsts', old.oattsts, 'ogn', old.ogn, 'rep', old.rep, 's1', old.s1, 's2', old.s2, 'snz', old.snz, 'ttl', old.ttl), NULL);\n    END;\n    "
    ],
    "version": "20231017043214_743"
  }
]